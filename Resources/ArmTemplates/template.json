{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appSharedResourceGroup": {
      "type": "string"
    },
    "appSharedStorageAccountName": {
      "type": "string"
    },
    "aseHostingEnvironmentName": {
      "type": "string",
      "defaultValue": ""
    },
    "aseResourceGroup": {
      "type": "string",
      "defaultValue": ""
    },
    "aspInstances": {
      "type": "int"
    },
    "aspSize": {
      "type": "string"
    },
    "aspTier": {
      "type": "string"
    },
    "CosmosDbResourceGroup": {
      "type": "string"
    },
    "cosmosDbName": {
      "type": "string"
    },
    "cosmosDbSharedCollectionName": {
      "type": "string"
    },
    "cosmosDbKey": {
      "type": "securestring"
    },
    "cosmosSessionDbCollectionName": {
      "type": "string",
      "metadata": {
        "description": "The name of the collection to create"
      }
    },
    "cmsTimeout": {
      "type": "string"
    },
    "cmsApiKey": {
      "type": "string"
    },
    "cmsBaseAddress": {
      "type": "string"
    },
    "cmsStaticContentEndpoint": {
      "type": "string"
    },
    "cmsContentIds": {
      "type": "string"
    },
    "ApplicationName": {
      "type": "string"
    },
    "environment": {
      "type": "string"
    },
    "contactusAppDatabaseNeedsCreation": {
      "type": "bool"
    },
    "contactusAppDatabaseThroughput": {
      "type": "int"
    },
    "chatOptionsChatUrl": {
      "type": "string",
      "defaultValue": ""
    },
    "ChatOptionsShowWebchatIframe": {
      "type": "bool"
    },
    "enableAlerts": {
      "type": "bool",
      "metadata": {
        "description": "Enable or disable alerting"
      }
    },
    "SubscriptionSettingsEndpoint": {
      "type": "string"
    },
    "subscriptionUrl": {
      "type": "string"
    },
    "apimCompositeApiKey": {
      "type": "securestring"
    },
    "ApimProxyAddress": {
      "type": "string"
    },
    "ApimFutureAccessModelKey": {
      "type": "string"
    },
    "FallbackEmailToAddresses": {
      "type": "string"
    },
    "NoReplyEmailAddress": {
      "type": "string"
    },
    "ProblemsEmailAddress": {
      "type": "string"
    },
    "FeebackEmailAddress": {
      "type": "string"
    },
    "OtherEmailAddress": {
      "type": "string"
    },
    "ApimResourceGroup": {
      "type": "string"
    },
    "ApimLoggerName": {
      "type": "string"
    },
    "ApimProductInstanceName": {
      "type": "string"
    },
    "ApimServiceName": {
      "type": "string"
    },
    "ApiName": {
      "type": "string"
    },
    "NotifyOptionsApiKey": {
      "type": "securestring"
    },
    "NotifyOptionsByEmailTemplateId": {
      "type": "string"
    },
    "NotifyOptionsCallMeBackTemplateId": {
      "type": "string"
    },
    "ExceptionCountThreshold": {
      "type": "string"
    },
    "CPUPercentageThreshold": {
      "type": "string"
    },
    "MemoryPercentageThreshold": {
      "type": "string"
    },
    "SubscriptionSettingsApimKey": {
      "type": "string"
    }
  },
  "variables": {
    "ApiName": "[concat(parameters('ApimProductInstanceName'), '-', parameters('ApiName'))]",
    "resourcePrefix": "[tolower(concat('dfc-', parameters('Environment'), '-app-contactus'))]",
    "appServicePlanName": "[concat(variables('resourcePrefix'), '-asp')]",
    "appServicePlanResourceGroup": "[concat(variables('resourcePrefix'),'-rg')]",
    "buildingBlocksDfcBaseUrl": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
    "cosmosDbCollectionPartitionKey": "/PartitionKey",
    "cosmosDbDatabaseName": "dfc-app-contactus",
    "cosmosDbEndpoint": "[concat('https://', parameters('cosmosDbName'), '.documents.azure.com:443/')]",
    "webAppName": "[concat(variables('ResourcePrefix'), '-as')]",
    "webAppInsightsName": "[concat(variables('resourcePrefix'), '-ai')]",
    "ActionGroupName": "[concat('dfc-', replace(tolower(parameters('Environment')), '-draft', ''), '-app-sharedresources-actgrp')]"
  },
  "resources": [
    {
      "name": "[variables('ApiName')]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('ApimResourceGroup')]",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'APIM/apim-api.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apimLoggerName": {
            "value": "[parameters('ApimLoggerName')]"
          },
          "apimProductInstanceName": {
            "value": "[parameters('ApimProductInstanceName')]"
          },
          "apimServiceName": {
            "value": "[parameters('ApimServiceName')]"
          },
          "apiName": {
            "value": "[variables('ApiName')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('webAppInsightsName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('buildingBlocksDfcBaseUrl'), 'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('webAppInsightsName')]"
          },
          "attachedService": {
            "value": ""
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('appServicePlanName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('buildingBlocksDfcBaseUrl'), 'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "aseHostingEnvironmentName": {
            "value": "[parameters('aseHostingEnvironmentName')]"
          },
          "aseResourceGroup": {
            "value": "[parameters('aseResourceGroup')]"
          },
          "aspSize": {
            "value": "[parameters('aspSize')]"
          },
          "aspInstances": {
            "value": "[parameters('aspInstances')]"
          },
          "nonASETier": {
            "value": "[parameters('aspTier')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[variables('WebAppName')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('buildingBlocksDfcBaseUrl'), 'app-service-staging.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('webAppName')]"
          },
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[variables('appServicePlanResourceGroup')]"
          },
          "appServiceType": {
            "value": "app"
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "MSDEPLOY_RENAME_LOCKED_FILES",
                "value": "1"
              },
              {
                "name": "CmsApiClientOptions__Timeout",
                "value": "[parameters('cmsTimeout')]"
              },
              {
                "name": "CmsApiClientOptions__ApiKey",
                "value": "[parameters('cmsApiKey')]"
              },
              {
                "name": "CmsApiClientOptions__BaseAddress",
                "value": "[parameters('cmsBaseAddress')]"
              },
              {
                "name": "CmsApiClientOptions__StaticContentEndpoint",
                "value": "[parameters('cmsStaticContentEndpoint')]"
              },
              {
                "name": "CmsApiClientOptions__ContentIds",
                "value": "[parameters('cmsContentIds')]"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(variables('webAppInsightsName')).outputs.InstrumentationKey.value]"
              },
              {
                "name": "AzureWebJobsStorage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('appSharedStorageAccountName'),';AccountKey=',listKeys(resourceId(parameters('appSharedResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('appSharedStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
              },
              {
                "name": "Logging__ApplicationInsights__LogLevel__Default",
                "value": "Information"
              },
              {
                "name": "Configuration__CosmosDbConnections__SharedContent__AccessKey",
                "value": "[parameters('cosmosDbKey')]"
              },
              {
                "name": "Configuration__CosmosDbConnections__SharedContent__EndpointUrl",
                "value": "[variables('cosmosDbEndpoint')]"
              },
              {
                "name": "Configuration__CosmosDbConnections__SharedContent__DatabaseId",
                "value": "[variables('cosmosDbDatabaseName')]"
              },
              {
                "name": "Configuration__CosmosDbConnections__SharedContent__CollectionId",
                "value": "[parameters('cosmosDbSharedCollectionName')]"
              },
              {
                "name": "Configuration__CosmosDbConnections__SharedContent__PartitionKey",
                "value": "[variables('cosmosDbCollectionPartitionKey')]"
              },
              {
                "name": "Configuration__CosmosDbConnections__SessionState__AccessKey",
                "value": "[parameters('cosmosDbKey')]"
              },
              {
                "name": "Configuration__CosmosDbConnections__SessionState__EndpointUrl",
                "value": "[variables('cosmosDbEndpoint')]"
              },
              {
                "name": "Configuration__CosmosDbConnections__SessionState__DatabaseId",
                "value": "[variables('cosmosDbDatabaseName')]"
              },
              {
                "name": "Configuration__CosmosDbConnections__SessionState__CollectionId",
                "value": "[parameters('cosmosSessionDbCollectionName')]"
              },
              {
                "name": "Configuration__CosmosDbConnections__SessionState__PartitionKey",
                "value": "[variables('cosmosDbCollectionPartitionKey')]"
              },
              {
                "name": "ChatOptions__ChatUrl",
                "value": "[parameters('chatOptionsChatUrl')]"
              },
              {
                "name": "ChatOptions__ShowWebchatIframe",
                "value": "[parameters('ChatOptionsShowWebchatIframe')]"
              },
              {
                "name": "FamApiRoutingOptions__ApiKey",
                "value": "[parameters('ApimFutureAccessModelKey')]"
              },
              {
                "name": "FamApiRoutingOptions__BaseAddress",
                "value": "[parameters('ApimProxyAddress')]"
              },
              {
                "name": "FamApiRoutingOptions__FallbackEmailToAddresses",
                "value": "[parameters('FallbackEmailToAddresses')]"
              },
              {
                "name": "FamApiRoutingOptions__NoReplyEmailAddress",
                "value": "[parameters('NoReplyEmailAddress')]"
              },
              {
                "name": "FamApiRoutingOptions__Timeout",
                "value": "00:00:10"
              },
              {
                "name": "FamApiRoutingOptions__ProblemsEmailAddress",
                "value": "[parameters('ProblemsEmailAddress')]"
              },
              {
                "name": "FamApiRoutingOptions__FeebackEmailAddress",
                "value": "[parameters('FeebackEmailAddress')]"
              },
              {
                "name": "FamApiRoutingOptions__OtherEmailAddress",
                "value": "[parameters('OtherEmailAddress')]"
              },
              {
                "name": "Configuration__ApplicationName",
                "value": "[parameters('ApplicationName')]"
              },
              {
                "name": "Configuration__NotifyOptions__ApiKey",
                "value": "[parameters('NotifyOptionsApiKey')]"
              },
              {
                "name": "Configuration__NotifyOptions__ByEmailTemplateId",
                "value": "[parameters('NotifyOptionsByEmailTemplateId')]"
              },
              {
                "name": "Configuration__NotifyOptions__CallMeBackTemplateId",
                "value": "[parameters('NotifyOptionsCallMeBackTemplateId')]"
              },
              {
                "name": "Configuration__NotifyOptions__Policies__HttpCircuitBreaker__DurationOfBreak",
                "value": "00:00:30"
              },
              {
                "name": "Configuration__NotifyOptions__Policies__HttpCircuitBreaker__ExceptionsAllowedBeforeBreaking",
                "value": 3
              },
              {
                "name": "Configuration__NotifyOptions__Policies__HttpRetry__BackoffPower",
                "value": 2
              },
              {
                "name": "Configuration__NotifyOptions__Policies__HttpRetry__Count",
                "value": 3
              },
              {
                "name": "WEBSITE_RUN_FROM_PACKAGE",
                "value": "1"
              },
              {
                "name": "WEBSITE_ADD_SITENAME_BINDINGS_IN_APPHOST_CONFIG",
                "value": "1"
              },
              {
                "name": "SubscriptionSettings__Filter__IncludeEventTypes__0",
                "value": "published"
              },
              {
                "name": "SubscriptionSettings__Filter__IncludeEventTypes__1",
                "value": "unpublished"
              },
              {
                "name": "SubscriptionSettings__Filter__IncludeEventTypes__2",
                "value": "deleted"
              },
              {
                "name": "SubscriptionSettings__Endpoint",
                "value": "[concat(parameters('SubscriptionSettingsEndpoint'),'/api/webhook/ReceiveEvents',parameters('SubscriptionSettingsApimKey'))]"
              },
              {
                "name": "SubscriptionSettings__SubscriptionServiceEndpoint",
                "value": "[concat(parameters('subscriptionUrl'),'/api/Execute')]"
              },
              {
                "name": "SubscriptionSettings__Filter__AdvancedFilters__0__Property",
                "value": "subject"
              },
              {
                "name": "SubscriptionSettings__Filter__AdvancedFilters__0__Values__0",
                "value": "/content/sharedcontent/"
              },
              {
                "name": "SubscriptionSettings__Filter__AdvancedFilters__0__Type",
                "value": "StringContains"
				      }
            ]
          }
        }
      },
      "dependsOn": [
        "[variables('webAppInsightsName')]"
      ]
    },
    {
      "name": "[variables('CosmosDbDatabaseName')]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('CosmosDbResourceGroup')]",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'),'CosmosDb/cosmos-database.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "accountName": {
            "value": "[parameters('CosmosDbName')]"
          },
          "databaseName": {
            "value": "[variables('CosmosDbDatabaseName')]"
          },
          "useSharedRequestUnits": {
            "value": true
          },
          "offerThroughput": {
            "value": "[parameters('contactusAppDatabaseThroughput')]"
          },
          "databaseNeedsCreation": {
            "value": "[parameters('contactusAppDatabaseNeedsCreation')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[parameters('cosmosDbSharedCollectionName')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[variables('CosmosDbDatabaseName')]"
      ],
      "resourceGroup": "[parameters('CosmosDbResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'CosmosDb/cosmos-collection.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "accountName": {
            "value": "[parameters('cosmosDbName')]"
          },
          "databaseName": {
            "value": "[variables('cosmosDbDatabaseName')]"
          },
          "collectionName": {
            "value": "[parameters('cosmosDbSharedCollectionName')]"
          },
          "provisionRequestUnits": {
            "value": false
          },
          "partitionKey": {
            "value": "[variables('cosmosDbCollectionPartitionKey')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[parameters('cosmosSessionDbCollectionName')]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('CosmosDbResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'CosmosDb/cosmos-collection.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "accountName": {
            "value": "[parameters('cosmosDbName')]"
          },
          "databaseName": {
            "value": "[variables('cosmosDbDatabaseName')]"
          },
          "collectionName": {
            "value": "[parameters('cosmosSessionDbCollectionName')]"
          },
          "provisionRequestUnits": {
            "value": false
          },
          "partitionKey": {
            "value": "[variables('cosmosDbCollectionPartitionKey')]"
          },
          "timeToLive": {
            "value": 2419200
          }
        }
      },
      "dependsOn": [
        "[variables('CosmosDbDatabaseName')]"
      ]
    },
    {
      "apiVersion": "2019-05-01",
      "name": "[concat(variables('webAppInsightsName'), '-metric-exceptions')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[variables('webAppInsightsName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "enabled": {
            "value": "[parameters('enableAlerts')]"
          },
          "alertName": {
            "value": "[concat(variables('webAppInsightsName'), '-metric-exceptions')]"
          },
          "alertSeverity": {
            "value": 3
          },
          "metricName": {
            "value": "exceptions/count"
          },
          "operator": {
            "value": "GreaterThan"
          },
          "threshold": {
            "value": "[parameters('ExceptionCountThreshold')]"
          },
          "aggregation": {
            "value": "Count"
          },
          "windowSize": {
            "value": "PT5M"
          },
          "evaluationFrequency": {
            "value": "PT1M"
          },
          "actionGroupName": {
            "value": "[variables('ActionGroupName')]"
          },
          "actionGroupResourceGroup": {
            "value": "[parameters('appSharedResourceGroup')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Insights/Components', variables('webAppInsightsName'))]"
          }
        }
      }
    },
    {
      "apiVersion": "2019-05-01",
      "name": "[concat(variables('webAppInsightsName'), '-failure-anomaly-v2')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat(variables('webAppInsightsName'), '-metric-exceptions')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/failure-anomaly-rule.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "alertName": {
            "value": "[concat(variables('webAppInsightsName'), '-failure-anomaly-v2')]"
          },
          "enabled": {
            "value": "[parameters('enableAlerts')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Insights/Components', variables('webAppInsightsName'))]"
          },
          "actionGroupId": {
            "value": "[resourceId(parameters('appSharedResourceGroup'), 'microsoft.insights/actionGroups', variables('ActionGroupName'))]"
          }
        }
      }
    },
    {
      "apiVersion": "2019-05-01",
      "name": "[concat(variables('AppServicePlanName'), '-CPUPercentage')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "enabled": {
            "value": "[parameters('enableAlerts')]"
          },
          "alertName": {
            "value": "[concat(variables('AppServicePlanName'), '-metric-CPUPercentage')]"
          },
          "alertSeverity": {
            "value": 3
          },
          "metricName": {
            "value": "CpuPercentage"
          },
          "operator": {
            "value": "GreaterThanOrEqual"
          },
          "threshold": {
            "value": "[parameters('CPUPercentageThreshold')]"
          },
          "aggregation": {
            "value": "Average"
          },
          "windowSize": {
            "value": "PT5M"
          },
          "evaluationFrequency": {
            "value": "PT1M"
          },
          "actionGroupName": {
            "value": "[variables('ActionGroupName')]"
          },
          "actionGroupResourceGroup": {
            "value": "[parameters('appSharedResourceGroup')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Web/serverFarms', variables('AppServicePlanName'))]"
          }
        }
      },
      "dependsOn": [
        "[variables('AppServicePlanName')]"
      ]
    },
    {
      "apiVersion": "2019-05-01",
      "name": "[concat(variables('AppServicePlanName'), '-MemoryPercentage')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'Application-Insights/metric-alerts.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "enabled": {
            "value": "[parameters('enableAlerts')]"
          },
          "alertName": {
            "value": "[concat(variables('AppServicePlanName'), '-metric-MemoryPercentage')]"
          },
          "alertSeverity": {
            "value": 3
          },
          "metricName": {
            "value": "MemoryPercentage"
          },
          "operator": {
            "value": "GreaterThanOrEqual"
          },
          "threshold": {
            "value": "[parameters('MemoryPercentageThreshold')]"
          },
          "aggregation": {
            "value": "Average"
          },
          "windowSize": {
            "value": "PT5M"
          },
          "evaluationFrequency": {
            "value": "PT1M"
          },
          "actionGroupName": {
            "value": "[variables('ActionGroupName')]"
          },
          "actionGroupResourceGroup": {
            "value": "[parameters('appSharedResourceGroup')]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Web/serverFarms', variables('AppServicePlanName'))]"
          }
        }
      },
      "dependsOn": [
        "[variables('AppServicePlanName')]"
      ]
    }
  ],
  "outputs": {}
}
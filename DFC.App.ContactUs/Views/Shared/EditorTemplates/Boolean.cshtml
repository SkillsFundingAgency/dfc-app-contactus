@model bool

@{
    const string govukFormGroupErrorClass = "govuk-form-group--error";
    const string govukInputErrorClass = "govuk-input--error";
    var showErrorClassForInput = string.Empty;
    var hintId = string.Empty;
    var showErrorClass = string.Empty;
    var errorKey = ViewData.ModelMetadata.PropertyName;

    if (ViewData.ModelState.Keys.Contains(errorKey))
    {
        if (ViewData.ModelState[errorKey] != null && ViewData.ModelState[errorKey].Errors.Any())
        {
            showErrorClassForInput = govukInputErrorClass;
            showErrorClass = govukFormGroupErrorClass;
        }
    }
}

    <div class="govuk-form-group @showErrorClass">
        <h3 class="govuk-heading">
            @Html.DisplayNameFor(model => model)
        </h3>

        @if (!string.IsNullOrWhiteSpace(ViewData.ModelMetadata.Description))
        {
            hintId = ViewData.ModelMetadata.Name + "-hint";

            <span id="@hintId" class="govuk-hint">
                @ViewData.ModelMetadata.Description
            </span>
        }

        @Html.ValidationMessageFor(model => model, string.Empty, new { @class = "govuk-error-message", @id = ViewData.ModelMetadata.Name + "-error" })

        <generic-checkbox name="@Html.NameFor(model => Model)"
                          value="@Model"
                          label="@ViewData["Label"]"
                          class="@showErrorClassForInput"
                          error-message="@ViewData["ErrorMessage"]"
                          compare-to="@ViewData["CompareTo"]"
                          />
    </div>
